@page "/stocks"
@using FinanceManagementApp.Services
@implements IDisposable

<h3>Stocks</h3>

@if (StockService.Stocks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @*foreach (var stock in StockService.Stocks.Values)
    {
        <p>@stock.Symbol</p>
        <p>@stock.RegularMarketChange</p>
        <p>@stock.RegularMarketPrice</p>
        <p>@stock.RegularMarketTime</p>
        <p>@(DateTimeOffset.FromUnixTimeSeconds(stock.RegularMarketTime).ToLocalTime().DateTime)</p>
    }*@
}

<canvas id="myChart"></canvas>

@code {
    [Inject]
    public StockService StockService { get; set; }

    [Inject]
    public IJSRuntime JSRunTime { get; set; }

    protected override void OnInitialized()
    {
        StockService.OnChange += StateHasChanged;
        StockService.Init();
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        JSRunTime.InvokeVoidAsync("buildChart");
        return base.OnAfterRenderAsync(firstRender);
    }

    public void Dispose()
    {
        StockService.OnChange -= StateHasChanged;
    }
}
